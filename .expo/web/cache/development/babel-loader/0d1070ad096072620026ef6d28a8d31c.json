{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\3TI\\\\Integration\\\\projet-Integration\\\\Messenger\\\\Main_Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar MainChat = function (_Component) {\n  _inherits(MainChat, _Component);\n\n  var _super = _createSuper(MainChat);\n\n  function MainChat() {\n    var _this;\n\n    _classCallCheck(this, MainChat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: ' '\n    };\n\n    _this.onChangeText = function (name) {\n      return _this.setState({\n        name: name\n      });\n    };\n\n    _this.onPress = function () {\n      _this.props.navigation.navigate('Chat', {\n        name: _this.state.name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainChat, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, \"Enter your name:\"), React.createElement(TextInput, {\n        onChangeText: this.onChangeText,\n        style: StyleSheet.nameInput,\n        placeholder: \"test\",\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 8\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, \"Next\")));\n    }\n  }]);\n\n  return MainChat;\n}(Component);\n\nvar offset = 24;\nvar styles = StyleSheet.create({\n  nameInput: {\n    height: offset * 2,\n    margin: offset,\n    paddingHorizontal: offset,\n    borderColor: '#111111',\n    borderWidth: 1\n  },\n  title: {\n    marginTop: offset,\n    marginLeft: offset,\n    fontSize: offset\n  },\n  buttonText: {\n    marginLeft: offset,\n    fontSize: offset,\n    backgroundColor: 'rgba(0,0,255,0.3)',\n    borderRadius: 10,\n    width: 75\n  }\n});\nexport default MainChat;","map":{"version":3,"sources":["E:/3TI/Integration/projet-Integration/Messenger/Main_Chat.js"],"names":["React","Component","MainChat","state","name","onChangeText","setState","onPress","props","navigation","navigate","styles","title","StyleSheet","nameInput","buttonText","offset","create","height","margin","paddingHorizontal","borderColor","borderWidth","marginTop","marginLeft","fontSize","backgroundColor","borderRadius","width"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IAIMC,Q;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,IAAI,EAAG;AAAT,K;;UACVC,Y,GAAe,UAAAD,IAAI;AAAA,aAAI,MAAKE,QAAL,CAAc;AAACF,QAAAA,IAAI,EAAJA;AAAD,OAAd,CAAJ;AAAA,K;;UACnBG,O,GAAU,YAAM;AAEd,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC;AAAEN,QAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC;AAAnB,OAAvC;AACD,K;;;;;;;6BACU;AACP,aACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,SAAD;AACA,QAAA,YAAY,EAAI,KAAKP,YADrB;AAEA,QAAA,KAAK,EAAIQ,UAAU,CAACC,SAFpB;AAGA,QAAA,WAAW,EAAG,MAHd;AAIA,QAAA,KAAK,EAAI,KAAKX,KAAL,CAAWC,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQG,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,CARH,CADA;AAcD;;;;EAtBoBd,S;;AAyBvB,IAAMe,MAAM,GAAG,EAAf;AACA,IAAML,MAAM,GAAGE,UAAU,CAACI,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAEF,MAAM,GAAG,CADR;AAETG,IAAAA,MAAM,EAAEH,MAFC;AAGTI,IAAAA,iBAAiB,EAAEJ,MAHV;AAITK,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE;AALJ,GADoB;AAQ/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,SAAS,EAAEP,MADN;AAELQ,IAAAA,UAAU,EAAER,MAFP;AAGLS,IAAAA,QAAQ,EAAET;AAHL,GARwB;AAa/BD,EAAAA,UAAU,EAAE;AACVS,IAAAA,UAAU,EAAER,MADF;AAEVS,IAAAA,QAAQ,EAAET,MAFA;AAGVU,IAAAA,eAAe,EAAG,mBAHR;AAIVC,IAAAA,YAAY,EAAG,EAJL;AAKVC,IAAAA,KAAK,EAAG;AALE;AAbmB,CAAlB,CAAf;AAqBA,eAAe1B,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet,TextInput,Text,TouchableOpacity} from 'react-native';\r\n\r\n\r\nclass MainChat extends Component {\r\n  state = { name : ' '}\r\nonChangeText = name => this.setState({name})\r\nonPress = () => {\r\n  //navigation\r\n  this.props.navigation.navigate('Chat', { name: this.state.name });\r\n}\r\n  render() {\r\n    return (\r\n    <View>\r\n      <Text style={styles.title}>Enter your name:</Text>\r\n      <TextInput \r\n      onChangeText = {this.onChangeText}\r\n      style = {StyleSheet.nameInput }\r\n      placeholder = \"test\"\r\n      value = {this.state.name} />\r\n\r\n       <TouchableOpacity onPress={this.onPress}>\r\n          <Text style={styles.buttonText}>Next</Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n      )\r\n  }\r\n}\r\n\r\nconst offset = 24;\r\nconst styles = StyleSheet.create({\r\n  nameInput: { // 3. <- Add a style for the input\r\n    height: offset * 2,\r\n    margin: offset,\r\n    paddingHorizontal: offset,\r\n    borderColor: '#111111',\r\n    borderWidth: 1,\r\n  },\r\n  title: { // 4.\r\n    marginTop: offset,\r\n    marginLeft: offset,\r\n    fontSize: offset,\r\n  },\r\n  buttonText: { // 5.\r\n    marginLeft: offset,\r\n    fontSize: offset,\r\n    backgroundColor : 'rgba(0,0,255,0.3)',\r\n    borderRadius : 10,\r\n    width : 75,\r\n  },\r\n});\r\nexport default MainChat;\r\n"]},"metadata":{},"sourceType":"module"}