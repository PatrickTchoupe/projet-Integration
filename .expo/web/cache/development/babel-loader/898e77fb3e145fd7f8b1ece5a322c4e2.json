{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\3TI\\\\Integration\\\\projet-Integration\\\\App\\\\SignIn\\\\Form.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PassMeter from \"react-native-passmeter\";\nconsole.disableYellowBox = true;\n\nvar Form = function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  var _super = _createSuper(Form);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _super.call(this);\n    _this.state = {\n      nom: '',\n      prenom: '',\n      motdepasse: '',\n      repMotdepasse: '',\n      adresse: '',\n      dateNaissance: '',\n      mail: '',\n      showPassword: true,\n      label: [\"Trop court\", \"Il faut au moins 1 chiffre et 1 lettre majuscule !\", \"Il faut au moins 1 lettre majuscule et 1 chiffre !\", \"Mot de passe valide\"]\n    };\n    _this.toggleSwitch = _this.toggleSwitch.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"toggleSwitch\",\n    value: function toggleSwitch() {\n      this.setState({\n        showPassword: !this.state.showPassword\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (this.state.nom == '' || this.state.prenom == '' || this.state.motdepasse == '' || this.state.repMotdepasse == '' || this.state.adresse == '' || this.state.dateNaissance == '' || this.state.mail == '') {\n        var simpleAlertHandler = function simpleAlertHandler() {\n          alert(\"Tous les champs ne sont pas remplis !\");\n        };\n\n        simpleAlertHandler();\n        return;\n      }\n\n      if (this.state.dateNaissance.length != 10 || this.state.dateNaissance.includes(',') == false || this.state.dateNaissance.match(/[^0-9,]/) != null) {\n        var _simpleAlertHandler = function _simpleAlertHandler() {\n          alert(\"La date de naissance ne correspond pas au format !\");\n        };\n\n        _simpleAlertHandler();\n\n        return;\n      }\n\n      if (this.state.dateNaissance.match(/[0-9]/g).length != 8 || this.state.dateNaissance.match(/[,]/g).length != 2 || this.state.dateNaissance.indexOf(',') != 2 || this.state.dateNaissance.lastIndexOf(',') != 5) {\n        var _simpleAlertHandler2 = function _simpleAlertHandler2() {\n          alert(\"La date de naissance ne correspond pas au format 22!\");\n        };\n\n        _simpleAlertHandler2();\n\n        console.log(this.state.dateNaissance.match(/[0-9]/g).length);\n        console.log(this.state.dateNaissance.match(/[,]/g).length);\n        console.log(this.state.dateNaissance.indexOf(','));\n        return;\n      }\n\n      if (this.state.mail.includes('@') == false || this.state.mail.includes('.') == false || this.state.mail.length < 8) {\n        var _simpleAlertHandler3 = function _simpleAlertHandler3() {\n          alert(\"Adresse mail incorrecte !\");\n        };\n\n        _simpleAlertHandler3();\n\n        return;\n      }\n\n      if (this.state.motdepasse != this.state.repMotdepasse) {\n        var _simpleAlertHandler4 = function _simpleAlertHandler4() {\n          alert(\"Le mot de passe n'est pas correctement rÃ©pÃ©tÃ© !\");\n        };\n\n        _simpleAlertHandler4();\n\n        return;\n      }\n\n      if (this.state.motdepasse.length < 8 || this.state.motdepasse.match(/\\d+/) == null || this.state.motdepasse == this.state.motdepasse.toLowerCase()) {\n        var _simpleAlertHandler5 = function _simpleAlertHandler5() {\n          alert(\"Le mot de passe n'est pas suffisament compliquÃ© !\");\n        };\n\n        _simpleAlertHandler5();\n\n        return;\n      }\n\n      fetch('http://localhost:8080/auth/', {\n        method: 'POST',\n        body: JSON.stringify({\n          nom: this.state.nom,\n          prenom: this.state.prenom,\n          adresse: this.state.adresse,\n          dateNaissance: this.state.dateNaissance,\n          mail: this.state.mail,\n          password: this.state.motdepasse\n        }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": \"true\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log(json);\n      }).catch(function (error) {\n        console.error(error);\n      });\n      this.props.navigation.navigate(\"Succes\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        useNativeDriver: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Nom\",\n        maxLength: 50,\n        autoCapitalize: \"sentences\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            nom: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Pr\\xC3\\xA9nom\",\n        maxLength: 50,\n        autoCapitalize: \"sentences\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            prenom: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Adresse\",\n        maxLength: 50,\n        autoCapitalize: \"sentences\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            adresse: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Date de naissance (ex:20,01,2000)\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            dateNaissance: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 12\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Adresse mail\",\n        maxLength: 50,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            mail: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Mot de passe\",\n        maxLength: 50,\n        secureTextEntry: this.state.showPassword,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            motdepasse: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }), React.createElement(PassMeter, {\n        showLabels: true,\n        password: this.state.motdepasse,\n        maxLength: 12,\n        minLength: 8,\n        labels: this.state.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"R\\xC3\\xA9p\\xC3\\xA9tition du mot de passe\",\n        maxLength: 50,\n        secureTextEntry: this.state.showPassword,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            repMotdepasse: text\n          });\n        },\n        style: styles.textInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, \"Cliquer pour afficher les mots de passe\"), React.createElement(Switch, {\n        onValueChange: this.toggleSwitch,\n        value: !this.state.showPassword,\n        style: styles.switch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        title: \"S'inscrire\",\n        onPress: function onPress() {\n          _this2.submit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 50,\n    backgroundColor: \"#eaeaea\"\n  },\n  textInput: {\n    marginTop: 25,\n    borderWidth: 1,\n    borderColor: 'blue',\n    borderRadius: 10,\n    textAlign: \"center\",\n    height: 45\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 20,\n    marginTop: 10\n  },\n  switch: {\n    transform: [{\n      scaleX: 1.5\n    }, {\n      scaleY: 1.5\n    }],\n    marginRight: (windowWidth - 100) / 2,\n    marginBottom: 40,\n    marginTop: 10\n  },\n  bar: {\n    width: \"10%\"\n  }\n});\nexport default Form;","map":{"version":3,"sources":["E:/3TI/Integration/projet-Integration/App/SignIn/Form.js"],"names":["React","PassMeter","console","disableYellowBox","Form","state","nom","prenom","motdepasse","repMotdepasse","adresse","dateNaissance","mail","showPassword","label","toggleSwitch","bind","setState","simpleAlertHandler","alert","length","includes","match","indexOf","lastIndexOf","log","toLowerCase","fetch","method","body","JSON","stringify","password","headers","Accept","then","response","json","catch","error","props","navigation","navigate","styles","container","text","textInput","switch","submit","Component","windowWidth","Dimensions","get","width","windowHeight","height","StyleSheet","create","flex","padding","backgroundColor","marginTop","borderWidth","borderColor","borderRadius","textAlign","fontSize","transform","scaleX","scaleY","marginRight","marginBottom","bar"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, Button, TextInput, ScrollView, Switch, Text, Dimensions   } from \"react-native\";\r\nimport PassMeter from \"react-native-passmeter\";\r\n//import DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nconsole.disableYellowBox = true;\r\n\r\n\r\nclass Form extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state={\r\n        nom:'',\r\n        prenom:'',\r\n        motdepasse:'',\r\n        repMotdepasse:'',\r\n        adresse: '',\r\n        dateNaissance: '', \r\n        mail: '',\r\n        showPassword: true,\r\n        label: [\"Trop court\", \"Il faut au moins 1 chiffre et 1 lettre majuscule !\", \"Il faut au moins 1 lettre majuscule et 1 chiffre !\", \"Mot de passe valide\"],\r\n      }\r\n      //sert ds la visualisation du mdp\r\n      this.toggleSwitch = this.toggleSwitch.bind(this);  \r\n    }\r\n    //sert ds la visualisation du mdp\r\n    toggleSwitch() {\r\n      this.setState({ showPassword: !this.state.showPassword });\r\n    }\r\n\r\n\r\n    submit() {\r\n      //envoie msg d'erreur si un champ est encore vide\r\n      if(this.state.nom == '' || this.state.prenom == '' || this.state.motdepasse == '' || this.state.repMotdepasse == '' || this.state.adresse == '' || this.state.dateNaissance == '' || this.state.mail == '') {\r\n        let simpleAlertHandler = () => {\r\n          alert(\"Tous les champs ne sont pas remplis !\");\r\n        };\r\n        simpleAlertHandler();\r\n        return;\r\n      }\r\n      //envoie msg d'erreur si dateNaissance est != 10 , ne comprends pas de ',' ou contient autre chose que chiffre et tiret\r\n      if( this.state.dateNaissance.length != 10 || this.state.dateNaissance.includes(',') == false || this.state.dateNaissance.match(/[^0-9,]/) != null){\r\n        let simpleAlertHandler = () => {\r\n          alert(\"La date de naissance ne correspond pas au format !\");\r\n        };\r\n        simpleAlertHandler();\r\n        return;\r\n      } \r\n      //envoie msg d'erreur si le nbre de chiffre != 8 , si nbre ',' != 2 et si tiret mal placÃ©\r\n      if(this.state.dateNaissance.match(/[0-9]/g).length != 8 || this.state.dateNaissance.match(/[,]/g).length != 2 || this.state.dateNaissance.indexOf(',') != 2 || this.state.dateNaissance.lastIndexOf(',') != 5) {\r\n        let simpleAlertHandler = () => {\r\n          alert(\"La date de naissance ne correspond pas au format 22!\");\r\n        };\r\n        simpleAlertHandler();\r\n        console.log(this.state.dateNaissance.match(/[0-9]/g).length)\r\n        console.log(this.state.dateNaissance.match(/[,]/g).length)\r\n        console.log(this.state.dateNaissance.indexOf(','))\r\n        return;\r\n      } \r\n      //envoie msg d'erreur si email ne contient pas @ et . et est plus petit que 8\r\n      if(this.state.mail.includes('@') == false || this.state.mail.includes('.') == false || this.state.mail.length < 8) {\r\n        let simpleAlertHandler = () => {\r\n          alert(\"Adresse mail incorrecte !\");\r\n        };\r\n        simpleAlertHandler();\r\n        return;\r\n      }      \r\n      //envoie msg d'erreur si mdp rÃ©pÃ©tÃ© est diffÃ©rent\r\n      if(this.state.motdepasse != this.state.repMotdepasse) {\r\n        let simpleAlertHandler = () => {\r\n          alert(\"Le mot de passe n'est pas correctement rÃ©pÃ©tÃ© !\");\r\n        };\r\n        simpleAlertHandler();\r\n        return;\r\n      }\r\n      //envoie msg d'erreur si le mdp est < Ã  8 OU ne contient pas de chiffre OU ne contient pas de majuscule\r\n      if(this.state.motdepasse.length < 8 || this.state.motdepasse.match(/\\d+/) == null || this.state.motdepasse == this.state.motdepasse.toLowerCase()) {\r\n        let simpleAlertHandler = () => {\r\n          alert(\"Le mot de passe n'est pas suffisament compliquÃ© !\");\r\n        };\r\n        simpleAlertHandler();\r\n        return;\r\n      }\r\n\r\n      fetch('http://localhost:8080/auth/', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          nom: this.state.nom,\r\n          prenom: this.state.prenom,\r\n          adresse: this.state.adresse,\r\n          dateNaissance: this.state.dateNaissance,\r\n          mail: this.state.mail,\r\n          password: this.state.motdepasse\r\n        }),\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          \"Access-Control-Allow-Origin\":\"true\"\r\n        }\r\n      }).then(response => response.json())\r\n      .then(json => {\r\n      console.log(json);\r\n      }).catch((error) => {\r\n        console.error(error);\r\n      });\r\n      \r\n      this.props.navigation.navigate(\"Succes\");\r\n    }\r\n\r\n    render() {\r\n      return ( \r\n        <ScrollView useNativeDriver= {true}>\r\n          <View style={styles.container}>\r\n            <TextInput\r\n              placeholder=\"Nom\"\r\n              maxLength={50}\r\n              autoCapitalize=\"sentences\"\r\n              onChangeText={(text)=> { this.setState({ nom: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <TextInput\r\n              placeholder=\"PrÃ©nom\"\r\n              maxLength={50}\r\n              autoCapitalize=\"sentences\"\r\n              onChangeText={(text)=> { this.setState({ prenom: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <TextInput\r\n              placeholder=\"Adresse\"\r\n              maxLength={50}\r\n              autoCapitalize=\"sentences\"\r\n              onChangeText={(text)=> { this.setState({ adresse: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n           <TextInput\r\n              placeholder=\"Date de naissance (ex:20,01,2000)\"\r\n              onChangeText={(text)=> { this.setState({ dateNaissance: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <TextInput\r\n              placeholder=\"Adresse mail\"\r\n              maxLength={50}\r\n              onChangeText={(text)=> { this.setState({ mail: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <TextInput\r\n              placeholder=\"Mot de passe\"\r\n              maxLength={50}\r\n              secureTextEntry={this.state.showPassword}\r\n              onChangeText={(text)=> { this.setState({ motdepasse: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <PassMeter\r\n              showLabels\r\n              password={this.state.motdepasse}\r\n              maxLength={12}\r\n              minLength={8}\r\n              labels={ this.state.label }\r\n            />\r\n            <TextInput\r\n              placeholder=\"RÃ©pÃ©tition du mot de passe\"\r\n              maxLength={50}\r\n              secureTextEntry={this.state.showPassword}\r\n              onChangeText={(text)=> { this.setState({ repMotdepasse: text }) }}\r\n              style={styles.textInput}\r\n            ></TextInput>\r\n            <Text style={styles.text}>\r\n              Cliquer pour afficher les mots de passe\r\n            </Text>\r\n            <Switch\r\n              onValueChange={this.toggleSwitch}\r\n              value={!this.state.showPassword}\r\n              style={styles.switch}\r\n            />\r\n            <Button\r\n              title=\"S'inscrire\"\r\n              onPress={()=>{this.submit()}}\r\n            ></Button>\r\n          </View>\r\n        </ScrollView>\r\n      )\r\n    }\r\n}\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 50,\r\n    backgroundColor: \"#eaeaea\",    \r\n  },\r\n\r\n  textInput: {\r\n   marginTop: 25,\r\n   borderWidth:1,\r\n   borderColor:'blue',\r\n   borderRadius: 10,\r\n   textAlign: \"center\",\r\n   height: 45,\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n  },\r\n  switch: {\r\n    transform:[{ scaleX: 1.5 }, { scaleY: 1.5 }],\r\n    marginRight: (windowWidth-100)/2,\r\n    marginBottom: 40,\r\n    marginTop: 10,\r\n  },\r\n  bar: {\r\n    width: \"10%\"\r\n  }\r\n})\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}