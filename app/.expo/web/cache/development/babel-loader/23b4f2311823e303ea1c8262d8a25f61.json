{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\treso\\\\Documents\\\\proj_int\\\\projet-Integration\\\\app\\\\Messenger\\\\Discussion_Screen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MaterialCommunityIconsIcon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialButtonShare from \"./components/MaterialButtonShare\";\nimport Chat from \"./Chat\";\nimport Contact from \"./contact\";\nimport Constants from 'expo-constants';\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nfunction Discussion_Repo(props) {\n  var _useState = useState('disc'),\n      _useState2 = _slicedToArray(_useState, 2),\n      disp = _useState2[0],\n      setDisp = _useState2[1];\n\n  var _useState3 = useState(\" \"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contacts = _useState4[0],\n      setContact = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  useEffect(function () {\n    function getContact() {\n      var contact, test;\n      return _regeneratorRuntime.async(function getContact$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('contact'));\n\n            case 2:\n              contact = _context.sent;\n\n              if (!(contact == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              test = [\"tets\"];\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('contact', JSON.stringify(test)));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              contact = JSON.parse(contact);\n              setContact(contact);\n              setLoaded(true);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getContact();\n  }, [loaded]);\n\n  function renderScreen(props) {\n    var arr = [];\n\n    for (var i = 1; i < contacts.length; i++) {\n      arr.push(React.createElement(Contact, {\n        key: i,\n        name: contacts[i][0].Nom,\n        imgUrl: contacts[i][0].PhotoProfil,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    if (disp === 'disc') {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, arr);\n    } else if (disp === 'groups') {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"Hi\");\n    } else if (disp === 'contacts') {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, \"Yup\");\n    }\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, loaded ? renderScreen() : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 36\n    }\n  }, \" \")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialButtonShare, {\n    iconName: \"share-variant\",\n    icon: \"account-multiple-plus\",\n    style: styles.materialButtonShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: [styles.footer, styles.materialIconTextButtonsFooter1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp('disc');\n      console.log({\n        disp: disp\n      });\n    },\n    style: styles.buttonWrapper1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"wechat\",\n    style: styles.icon1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.btn1Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Recent\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp('groups');\n      console.log({\n        disp: disp\n      });\n    },\n    style: styles.activeButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"account-group\",\n    style: styles.activeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.activeContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Groups\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp('contacts');\n      console.log({\n        disp: disp\n      });\n    },\n    style: styles.buttonWrapper2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"contacts\",\n    style: styles.icon2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.btn2Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Contacts\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  },\n  scrollView: {\n    flex: .8\n  },\n  footer: {\n    position: 'fixed',\n    flex: 0.1,\n    left: 0,\n    right: 0,\n    bottom: -10,\n    backgroundColor: \"#FFF\",\n    flexDirection: \"row\",\n    shadowColor: \"#111\",\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.2\n  },\n  materialIconTextButtonsFooter1: {\n    height: 62,\n    width: \"100%\",\n    marginTop: 678\n  },\n  buttonWrapper1: {\n    flex: 1,\n    paddingTop: 8,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  icon1: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn1Text: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  activeButtonWrapper: {\n    flex: 1,\n    paddingTop: 6,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  activeIcon: {\n    backgroundColor: \"transparent\",\n    color: \"#9E9E9E\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  activeContent: {\n    fontSize: 14,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  buttonWrapper2: {\n    flex: 1,\n    paddingTop: 8,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  icon2: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn2Text: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  buttonAdd: {\n    width: 56,\n    height: 56,\n    position: 'fixed',\n    flex: 0.1,\n    left: \"80%\",\n    right: 0,\n    bottom: 80\n  },\n  materialButtonShare: {\n    height: 56,\n    width: 56\n  }\n});\nexport default Discussion_Repo;","map":{"version":3,"sources":["C:/Users/treso/Documents/proj_int/projet-Integration/app/Messenger/Discussion_Screen.js"],"names":["React","useEffect","useState","MaterialCommunityIconsIcon","MaterialButtonShare","Chat","Contact","Constants","AsyncStorage","Discussion_Repo","props","disp","setDisp","contacts","setContact","loaded","setLoaded","getContact","getItem","contact","test","setItem","JSON","stringify","parse","renderScreen","arr","i","length","push","Nom","PhotoProfil","styles","container","scrollView","buttonAdd","materialButtonShare","footer","materialIconTextButtonsFooter1","console","log","buttonWrapper1","icon1","btn1Text","activeButtonWrapper","activeIcon","activeContent","buttonWrapper2","icon2","btn2Text","StyleSheet","create","flex","marginTop","statusBarHeight","position","left","right","bottom","backgroundColor","flexDirection","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingTop","paddingBottom","paddingHorizontal","minWidth","maxWidth","alignItems","color","fontSize","opacity"],"mappings":"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","sourcesContent":["//this component is the home screen of our chat component\r\n\r\nimport React, {  useEffect, useState } from \"react\";\r\nimport { StyleSheet, View, TouchableOpacity, Text,SafeAreaView, ScrollView } from \"react-native\";\r\nimport MaterialCommunityIconsIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport MaterialButtonShare from \"./components/MaterialButtonShare\";\r\n\r\nimport Chat from './Chat'\r\nimport Contact from \"./contact\";\r\nimport Constants from 'expo-constants';\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\n\r\nfunction Discussion_Repo(props) {\r\n\r\n   \r\n    const  [disp, setDisp] = useState('disc');\r\n    const  [contacts, setContact] = useState(\" \");\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(  () =>{\r\n      async function getContact() {\r\n     let contact = await AsyncStorage.getItem('contact');\r\n     if(contact == null) {\r\n      let test = [\"tets\"];\r\n      await AsyncStorage.setItem('contact', JSON.stringify(test))\r\n     }else {\r\n      contact = JSON.parse(contact);\r\n      setContact(contact) \r\n      setLoaded(true)\r\n     }\r\n\r\n    }\r\n    getContact();\r\n  }, [loaded])\r\n    \r\n\r\n    function renderScreen(props) {\r\n      let arr = [];\r\n     \r\n      for(let i=1; i< contacts.length; i++ ){\r\n        arr.push(<Contact key= {i} name= {contacts[i][0].Nom} imgUrl ={contacts[i][0].PhotoProfil}  />)\r\n\r\n}      if(disp === 'disc'){\r\n\r\n        return (\r\n        <View>\r\n        {arr} \r\n      \r\n        </View>)\r\n      }else if(disp === 'groups'){\r\n        return (<Text>Hi</Text>)\r\n      }else if(disp === 'contacts'){\r\n        return (<Text>Yup</Text>)\r\n      }\r\n    }\r\n\r\n    return (  \r\n      <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollView}> \r\n        {loaded ? renderScreen() : <Text> </Text>}\r\n        </ScrollView>   \r\n        <View>\r\n        <TouchableOpacity  style={styles.buttonAdd} >\r\n      <MaterialButtonShare \r\n        iconName=\"share-variant\"\r\n        icon=\"account-multiple-plus\"\r\n        style={styles.materialButtonShare}\r\n      ></MaterialButtonShare>\r\n      </TouchableOpacity>\r\n    </View>\r\n\r\n    <View style={[styles.footer, styles.materialIconTextButtonsFooter1]}>\r\n      <TouchableOpacity  onPress = {() =>{setDisp('disc');console.log({disp})}}\r\n        \r\n        style={styles.buttonWrapper1}\r\n      >\r\n        <MaterialCommunityIconsIcon\r\n          name={\"wechat\"}\r\n          style={styles.icon1}\r\n        ></MaterialCommunityIconsIcon>\r\n        <Text style={styles.btn1Text}>Recent</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress = {() =>{setDisp('groups');console.log({disp})}}\r\n        \r\n        style={styles.activeButtonWrapper}\r\n      >\r\n        <MaterialCommunityIconsIcon\r\n          name={\"account-group\" }\r\n          style={styles.activeIcon}\r\n        ></MaterialCommunityIconsIcon>\r\n        <Text style={styles.activeContent}>Groups</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity  onPress = {() =>{setDisp('contacts');console.log({disp})}}\r\n        style={styles.buttonWrapper2}\r\n      >\r\n        <MaterialCommunityIconsIcon\r\n          name={\"contacts\"}\r\n          style={styles.icon2}\r\n        ></MaterialCommunityIconsIcon>\r\n        <Text style={styles.btn2Text}>Contacts</Text>\r\n      </TouchableOpacity>\r\n     \r\n    </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: Constants.statusBarHeight,\r\n  },\r\n  scrollView: {\r\n  flex : .8,    \r\n  },\r\n    footer: {\r\n    position: 'fixed',\r\n     flex:0.1,\r\n     left: 0,\r\n     right: 0,\r\n     bottom: -10,\r\n      backgroundColor: \"#FFF\",\r\n      flexDirection: \"row\",\r\n      shadowColor: \"#111\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: -2\r\n      },\r\n    \r\n      shadowOpacity: 0.2,\r\n      shadowRadius: 1.2,\r\n    },\r\n    materialIconTextButtonsFooter1: {\r\n      height: 62,\r\n      width: \"100%\",\r\n      marginTop: 678\r\n    },\r\n    buttonWrapper1: {\r\n      flex: 1,\r\n      paddingTop: 8,\r\n      paddingBottom: 10,\r\n      paddingHorizontal: 12,\r\n      minWidth: 80,\r\n      maxWidth: 168,\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n    icon1: {\r\n      backgroundColor: \"transparent\",\r\n      color: \"#616161\",\r\n      fontSize: 24,\r\n     \r\n      opacity: 0.8\r\n    },\r\n    btn1Text: {\r\n      fontSize: 12,\r\n      color: \"#9E9E9E\",\r\n      backgroundColor: \"transparent\",\r\n      paddingTop: 4\r\n    },\r\n    activeButtonWrapper: {\r\n      flex: 1,\r\n      paddingTop: 6,\r\n      paddingBottom: 10,\r\n      paddingHorizontal: 12,\r\n      minWidth: 80,\r\n      maxWidth: 168,\r\n      alignItems: \"center\"\r\n    },\r\n    activeIcon: {\r\n      backgroundColor: \"transparent\",\r\n      color: \"#9E9E9E\",\r\n      fontSize: 24,\r\n      opacity: 0.8\r\n    },\r\n    activeContent: {\r\n      fontSize: 14,\r\n      color: \"#9E9E9E\",\r\n      backgroundColor: \"transparent\",\r\n      paddingTop: 4\r\n    },\r\n    buttonWrapper2: {\r\n      flex: 1,\r\n      paddingTop: 8,\r\n      paddingBottom: 10,\r\n      paddingHorizontal: 12,\r\n      minWidth: 80,\r\n      maxWidth: 168,\r\n      alignItems: \"center\"\r\n    },\r\n    icon2: {\r\n      backgroundColor: \"transparent\",\r\n      color: \"#616161\",\r\n      fontSize: 24,\r\n      opacity: 0.8\r\n    },\r\n    btn2Text: {\r\n      fontSize: 12,\r\n      color: \"#9E9E9E\",\r\n      backgroundColor: \"transparent\",\r\n      paddingTop: 4\r\n    },\r\n    buttonAdd :{\r\n    width: 56,\r\n    height: 56,\r\n    position: 'fixed',\r\n    flex: 0.1,\r\n    left : \"80%\",\r\n    right: 0,\r\n    bottom:80,\r\n    },\r\n    materialButtonShare: {\r\n      height: 56,\r\n      width: 56\r\n    }\r\n  });\r\nexport default Discussion_Repo;\r\n"]},"metadata":{},"sourceType":"module"}