{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\3TI\\\\Integration\\\\projet-Integration\\\\app\\\\Messenger\\\\Discussionscreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MaterialCommunityIconsIcon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialButtonShare from \"./components/MaterialButtonShare\";\nimport Contact from \"./contact\";\nimport Constants from \"expo-constants\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nvar userId = \" \";\n\nfunction Discussion_Repo(props) {\n  var _useState = useState(\"disc\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      disp = _useState2[0],\n      setDisp = _useState2[1];\n\n  var _useState3 = useState(\" \"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contacts = _useState4[0],\n      setContact = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loaded = _useState6[0],\n      setLoaded = _useState6[1];\n\n  useEffect(function () {\n    function getContact() {\n      var contact, test, id;\n      return _regeneratorRuntime.async(function getContact$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"contact\"));\n\n            case 2:\n              contact = _context.sent;\n\n              if (!(contact == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              test = [];\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"contact\", JSON.stringify(test)));\n\n            case 7:\n              _context.next = 12;\n              break;\n\n            case 9:\n              contact = JSON.parse(contact);\n              setContact(contact);\n              setLoaded(true);\n\n            case 12:\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 14:\n              id = _context.sent;\n              id = JSON.parse(id).Id;\n              userId = id;\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getContact();\n  }, [loaded]);\n\n  function renderScreen() {\n    var _this = this;\n\n    console.log(\"tata\");\n    console.log(userId);\n    var arr = [];\n\n    var _loop = function _loop(i) {\n      arr.push(React.createElement(Contact, {\n        userId: userId,\n        key: i,\n        id: contacts[i].Id,\n        name: contacts[i].Nom,\n        imgUrl: contacts[i].PhotoProfil,\n        onNav: function onNav() {\n          return props.navigation.navigate('Chat', {\n            recieverId: contacts[i].Id,\n            senderId: userId\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    for (var i = 0; i < contacts.length; i++) {\n      _loop(i);\n    }\n\n    if (disp === \"disc\") {\n      return React.createElement(Text, {\n        style: {\n          fontStyle: \"bolder\",\n          fontSize: \"1.2em\",\n          marginLeft: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, \"Not yet Available\");\n    } else if (disp === \"groups\") {\n      return React.createElement(Text, {\n        style: {\n          fontStyle: \"bolder\",\n          fontSize: \"1.2em\",\n          marginLeft: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"Not yet Available\");\n    } else if (disp === \"contacts\") {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, arr);\n    }\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, loaded ? renderScreen() : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 36\n    }\n  }, \" \")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, disp == \"contacts\" ? React.createElement(MaterialButtonShare, {\n    iconName: \"share-variant\",\n    icon: \"account-multiple-plus\",\n    style: styles.materialButtonShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: [styles.footer, styles.materialIconTextButtonsFooter1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp(\"disc\");\n    },\n    style: styles.buttonWrapper1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"wechat\",\n    style: styles.icon1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.btn1Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Recent\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp(\"groups\");\n    },\n    style: styles.activeButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"account-group\",\n    style: styles.activeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.activeContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Groups\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setDisp(\"contacts\");\n    },\n    style: styles.buttonWrapper2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIconsIcon, {\n    name: \"contacts\",\n    style: styles.icon2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.btn2Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Contacts\"))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  },\n  scrollView: {\n    flex: 0.8\n  },\n  footer: {\n    position: \"fixed\",\n    flex: 0.1,\n    left: 0,\n    right: 0,\n    bottom: -10,\n    backgroundColor: \"#FFF\",\n    flexDirection: \"row\",\n    shadowColor: \"#111\",\n    shadowOffset: {\n      width: 0,\n      height: -2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.2\n  },\n  materialIconTextButtonsFooter1: {\n    height: 62,\n    width: \"100%\",\n    marginTop: 678\n  },\n  buttonWrapper1: {\n    flex: 1,\n    paddingTop: 8,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  icon1: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn1Text: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  activeButtonWrapper: {\n    flex: 1,\n    paddingTop: 6,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  activeIcon: {\n    backgroundColor: \"transparent\",\n    color: \"#9E9E9E\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  activeContent: {\n    fontSize: 14,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  buttonWrapper2: {\n    flex: 1,\n    paddingTop: 8,\n    paddingBottom: 10,\n    paddingHorizontal: 12,\n    minWidth: 80,\n    maxWidth: 168,\n    alignItems: \"center\"\n  },\n  icon2: {\n    backgroundColor: \"transparent\",\n    color: \"#616161\",\n    fontSize: 24,\n    opacity: 0.8\n  },\n  btn2Text: {\n    fontSize: 12,\n    color: \"#9E9E9E\",\n    backgroundColor: \"transparent\",\n    paddingTop: 4\n  },\n  buttonAdd: {\n    width: 56,\n    height: 56,\n    position: \"fixed\",\n    flex: 0.1,\n    left: \"80%\",\n    right: 0,\n    bottom: 80\n  },\n  materialButtonShare: {\n    height: 56,\n    width: 56\n  }\n});\nexport default Discussion_Repo;","map":{"version":3,"sources":["E:/3TI/Integration/projet-Integration/app/Messenger/Discussionscreen.js"],"names":["React","useEffect","useState","MaterialCommunityIconsIcon","MaterialButtonShare","Contact","Constants","AsyncStorage","userId","Discussion_Repo","props","disp","setDisp","contacts","setContact","loaded","setLoaded","getContact","getItem","contact","test","setItem","JSON","stringify","parse","id","Id","renderScreen","console","log","arr","i","push","Nom","PhotoProfil","navigation","navigate","recieverId","senderId","length","fontStyle","fontSize","marginLeft","styles","container","scrollView","buttonAdd","materialButtonShare","footer","materialIconTextButtonsFooter1","buttonWrapper1","icon1","btn1Text","activeButtonWrapper","activeIcon","activeContent","buttonWrapper2","icon2","btn2Text","StyleSheet","create","flex","marginTop","statusBarHeight","position","left","right","bottom","backgroundColor","flexDirection","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","paddingTop","paddingBottom","paddingHorizontal","minWidth","maxWidth","alignItems","color","opacity"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,0BAAP;AACA,OAAOC,mBAAP;AAEA,OAAOC,OAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,IAAIC,MAAM,GAAG,GAAb;;AAEA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAAA,kBACPR,QAAQ,CAAC,MAAD,CADD;AAAA;AAAA,MACxBS,IADwB;AAAA,MAClBC,OADkB;;AAAA,mBAEAV,QAAQ,CAAC,GAAD,CAFR;AAAA;AAAA,MAExBW,QAFwB;AAAA,MAEdC,UAFc;;AAAA,mBAGHZ,QAAQ,CAAC,KAAD,CAHL;AAAA;AAAA,MAGxBa,MAHwB;AAAA,MAGhBC,SAHgB;;AAO/Bf,EAAAA,SAAS,CAAC,YAAM;AAEd,aAAegB,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACsBV,YAAY,CAACW,OAAb,CAAqB,SAArB,CADtB;;AAAA;AACMC,cAAAA,OADN;;AAAA,oBAEMA,OAAO,IAAI,IAFjB;AAAA;AAAA;AAAA;;AAGQC,cAAAA,IAHR,GAGe,EAHf;AAAA;AAAA,+CAIUb,YAAY,CAACc,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAhC,CAJV;;AAAA;AAAA;AAAA;;AAAA;AAMID,cAAAA,OAAO,GAAGG,IAAI,CAACE,KAAL,CAAWL,OAAX,CAAV;AACAL,cAAAA,UAAU,CAACK,OAAD,CAAV;AACAH,cAAAA,SAAS,CAAC,IAAD,CAAT;;AARJ;AAAA;AAAA,+CAWiBT,YAAY,CAACW,OAAb,CAAqB,MAArB,CAXjB;;AAAA;AAWMO,cAAAA,EAXN;AAYEA,cAAAA,EAAE,GAAGH,IAAI,CAACE,KAAL,CAAWC,EAAX,EAAeC,EAApB;AACDlB,cAAAA,MAAM,GAAGiB,EAAT;;AAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeAR,IAAAA,UAAU;AACX,GAlBQ,EAkBN,CAACF,MAAD,CAlBM,CAAT;;AAoBA,WAASY,YAAT,GAAwB;AAAA;;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AAEA,QAAIsB,GAAG,GAAG,EAAV;;AAJsB,+BAKbC,CALa;AAMpBD,MAAAA,GAAG,CAACE,IAAJ,CACE,oBAAC,OAAD;AACA,QAAA,MAAM,EAAIxB,MADV;AAEE,QAAA,GAAG,EAAEuB,CAFP;AAGE,QAAA,EAAE,EAAIlB,QAAQ,CAACkB,CAAD,CAAR,CAAYL,EAHpB;AAIE,QAAA,IAAI,EAAEb,QAAQ,CAACkB,CAAD,CAAR,CAAYE,GAJpB;AAKE,QAAA,MAAM,EAAEpB,QAAQ,CAACkB,CAAD,CAAR,CAAYG,WALtB;AAME,QAAA,KAAK,EAAE;AAAA,iBAAMxB,KAAK,CAACyB,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B,EAAkC;AAAEC,YAAAA,UAAU,EAAExB,QAAQ,CAACkB,CAAD,CAAR,CAAYL,EAA1B;AAA8BY,YAAAA,QAAQ,EAAE9B;AAAxC,WAAlC,CAAN;AAAA,SANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AANoB;;AAKtB,SAAK,IAAIuB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,QAAQ,CAAC0B,MAA7B,EAAqCR,CAAC,EAAtC,EAA0C;AAAA,YAAjCA,CAAiC;AAYzC;;AACD,QAAIpB,IAAI,KAAK,MAAb,EAAqB;AACnB,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,QAAQ,EAAE,OAAjC;AAA0CC,UAAAA,UAAU,EAAE;AAAtD,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAOD,KARD,MAQO,IAAI/B,IAAI,KAAK,QAAb,EAAuB;AAC5B,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAE6B,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,QAAQ,EAAE,OAAjC;AAA0CC,UAAAA,UAAU,EAAE;AAAtD,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF;AAOD,KARM,MAQA,IAAI/B,IAAI,KAAK,UAAb,EAAyB;AAC9B,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOmB,GAAP,CAAP;AACD;AACF;;AAED,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEa,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED,MAAM,CAACE,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9B,MAAM,GAAGY,YAAY,EAAf,GAAoB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD7B,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEgB,MAAM,CAACG,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,IAAI,IAAI,UAAR,GACC,oBAAC,mBAAD;AACE,IAAA,QAAQ,EAAC,eADX;AAEE,IAAA,IAAI,EAAC,uBAFP;AAGE,IAAA,KAAK,EAAEgC,MAAM,CAACI,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,CAJF,EAkBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,8BAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbrC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAHH;AAIE,IAAA,KAAK,EAAE+B,MAAM,CAACO,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,0BAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,KAAK,EAAEP,MAAM,CAACQ,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF,EAaE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbxC,MAAAA,OAAO,CAAC,QAAD,CAAP;AACD,KAHH;AAIE,IAAA,KAAK,EAAE+B,MAAM,CAACU,mBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,0BAAD;AACE,IAAA,IAAI,EAAE,eADR;AAEE,IAAA,KAAK,EAAEV,MAAM,CAACW,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CAbF,EAyBE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb3C,MAAAA,OAAO,CAAC,UAAD,CAAP;AACD,KAHH;AAIE,IAAA,KAAK,EAAE+B,MAAM,CAACa,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,0BAAD;AACE,IAAA,IAAI,EAAE,UADR;AAEE,IAAA,KAAK,EAAEb,MAAM,CAACc,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CAzBF,CAlBF,CADF;AA2DD;;AAED,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAExD,SAAS,CAACyD;AAFZ,GADoB;AAK/BlB,EAAAA,UAAU,EAAE;AACVgB,IAAAA,IAAI,EAAE;AADI,GALmB;AAQ/Bb,EAAAA,MAAM,EAAE;AACNgB,IAAAA,QAAQ,EAAE,OADJ;AAENH,IAAAA,IAAI,EAAE,GAFA;AAGNI,IAAAA,IAAI,EAAE,CAHA;AAINC,IAAAA,KAAK,EAAE,CAJD;AAKNC,IAAAA,MAAM,EAAE,CAAC,EALH;AAMNC,IAAAA,eAAe,EAAE,MANX;AAONC,IAAAA,aAAa,EAAE,KAPT;AAQNC,IAAAA,WAAW,EAAE,MARP;AASNC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE,CAAC;AAFG,KATR;AAcNC,IAAAA,aAAa,EAAE,GAdT;AAeNC,IAAAA,YAAY,EAAE;AAfR,GARuB;AAyB/B1B,EAAAA,8BAA8B,EAAE;AAC9BwB,IAAAA,MAAM,EAAE,EADsB;AAE9BD,IAAAA,KAAK,EAAE,MAFuB;AAG9BV,IAAAA,SAAS,EAAE;AAHmB,GAzBD;AA8B/BZ,EAAAA,cAAc,EAAE;AACdW,IAAAA,IAAI,EAAE,CADQ;AAEde,IAAAA,UAAU,EAAE,CAFE;AAGdC,IAAAA,aAAa,EAAE,EAHD;AAIdC,IAAAA,iBAAiB,EAAE,EAJL;AAKdC,IAAAA,QAAQ,EAAE,EALI;AAMdC,IAAAA,QAAQ,EAAE,GANI;AAOdC,IAAAA,UAAU,EAAE;AAPE,GA9Be;AAuC/B9B,EAAAA,KAAK,EAAE;AACLiB,IAAAA,eAAe,EAAE,aADZ;AAELc,IAAAA,KAAK,EAAE,SAFF;AAGLzC,IAAAA,QAAQ,EAAE,EAHL;AAKL0C,IAAAA,OAAO,EAAE;AALJ,GAvCwB;AA8C/B/B,EAAAA,QAAQ,EAAE;AACRX,IAAAA,QAAQ,EAAE,EADF;AAERyC,IAAAA,KAAK,EAAE,SAFC;AAGRd,IAAAA,eAAe,EAAE,aAHT;AAIRQ,IAAAA,UAAU,EAAE;AAJJ,GA9CqB;AAoD/BvB,EAAAA,mBAAmB,EAAE;AACnBQ,IAAAA,IAAI,EAAE,CADa;AAEnBe,IAAAA,UAAU,EAAE,CAFO;AAGnBC,IAAAA,aAAa,EAAE,EAHI;AAInBC,IAAAA,iBAAiB,EAAE,EAJA;AAKnBC,IAAAA,QAAQ,EAAE,EALS;AAMnBC,IAAAA,QAAQ,EAAE,GANS;AAOnBC,IAAAA,UAAU,EAAE;AAPO,GApDU;AA6D/B3B,EAAAA,UAAU,EAAE;AACVc,IAAAA,eAAe,EAAE,aADP;AAEVc,IAAAA,KAAK,EAAE,SAFG;AAGVzC,IAAAA,QAAQ,EAAE,EAHA;AAIV0C,IAAAA,OAAO,EAAE;AAJC,GA7DmB;AAmE/B5B,EAAAA,aAAa,EAAE;AACbd,IAAAA,QAAQ,EAAE,EADG;AAEbyC,IAAAA,KAAK,EAAE,SAFM;AAGbd,IAAAA,eAAe,EAAE,aAHJ;AAIbQ,IAAAA,UAAU,EAAE;AAJC,GAnEgB;AAyE/BpB,EAAAA,cAAc,EAAE;AACdK,IAAAA,IAAI,EAAE,CADQ;AAEde,IAAAA,UAAU,EAAE,CAFE;AAGdC,IAAAA,aAAa,EAAE,EAHD;AAIdC,IAAAA,iBAAiB,EAAE,EAJL;AAKdC,IAAAA,QAAQ,EAAE,EALI;AAMdC,IAAAA,QAAQ,EAAE,GANI;AAOdC,IAAAA,UAAU,EAAE;AAPE,GAzEe;AAkF/BxB,EAAAA,KAAK,EAAE;AACLW,IAAAA,eAAe,EAAE,aADZ;AAELc,IAAAA,KAAK,EAAE,SAFF;AAGLzC,IAAAA,QAAQ,EAAE,EAHL;AAIL0C,IAAAA,OAAO,EAAE;AAJJ,GAlFwB;AAwF/BzB,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,QAAQ,EAAE,EADF;AAERyC,IAAAA,KAAK,EAAE,SAFC;AAGRd,IAAAA,eAAe,EAAE,aAHT;AAIRQ,IAAAA,UAAU,EAAE;AAJJ,GAxFqB;AA8F/B9B,EAAAA,SAAS,EAAE;AACT0B,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTT,IAAAA,QAAQ,EAAE,OAHD;AAITH,IAAAA,IAAI,EAAE,GAJG;AAKTI,IAAAA,IAAI,EAAE,KALG;AAMTC,IAAAA,KAAK,EAAE,CANE;AAOTC,IAAAA,MAAM,EAAE;AAPC,GA9FoB;AAuG/BpB,EAAAA,mBAAmB,EAAE;AACnB0B,IAAAA,MAAM,EAAE,EADW;AAEnBD,IAAAA,KAAK,EAAE;AAFY;AAvGU,CAAlB,CAAf;AA4GA,eAAe/D,eAAf","sourcesContent":["//this component is the home screen of our chat component\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TouchableOpacity,\r\n  Text,\r\n  SafeAreaView,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport MaterialCommunityIconsIcon from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport MaterialButtonShare from \"./components/MaterialButtonShare\";\r\n\r\nimport Contact from \"./contact\";\r\nimport Constants from \"expo-constants\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nlet userId = \" \"\r\n\r\nfunction Discussion_Repo( props) {\r\n  const [disp, setDisp] = useState(\"disc\");\r\n  const [contacts, setContact] = useState(\" \");\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    async function getContact() {\r\n      let contact = await AsyncStorage.getItem(\"contact\");\r\n      if (contact == null) {\r\n        let test = [];\r\n        await AsyncStorage.setItem(\"contact\", JSON.stringify(test));\r\n      } else {\r\n        contact = JSON.parse(contact);\r\n        setContact(contact);\r\n        setLoaded(true);\r\n      }\r\n\r\n      let id = await AsyncStorage.getItem(\"user\")\r\n      id = JSON.parse(id).Id\r\n     userId = id\r\n    }\r\n    getContact();\r\n  }, [loaded]);\r\n\r\n  function renderScreen() {\r\n    console.log(\"tata\")\r\n    console.log(userId)\r\n   \r\n    let arr = [];\r\n    for (let i = 0; i < contacts.length; i++) {\r\n      arr.push(\r\n        <Contact\r\n        userId = {userId}\r\n          key={i}\r\n          id = {contacts[i].Id}\r\n          name={contacts[i].Nom}\r\n          imgUrl={contacts[i].PhotoProfil}\r\n          onNav={() => props.navigation.navigate('Chat', { recieverId: contacts[i].Id, senderId: userId })}\r\n\r\n        />\r\n      );\r\n    }\r\n    if (disp === \"disc\") {\r\n      return (\r\n        <Text\r\n          style={{ fontStyle: \"bolder\", fontSize: \"1.2em\", marginLeft: \"10%\" }}\r\n        >\r\n          Not yet Available\r\n        </Text>\r\n      );\r\n    } else if (disp === \"groups\") {\r\n      return (\r\n        <Text\r\n          style={{ fontStyle: \"bolder\", fontSize: \"1.2em\", marginLeft: \"10%\" }}\r\n        >\r\n          Not yet Available\r\n        </Text>\r\n      );\r\n    } else if (disp === \"contacts\") {\r\n      return <View>{arr}</View>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        {loaded ? renderScreen() : <Text> </Text>}\r\n      </ScrollView>\r\n      <View>\r\n        <TouchableOpacity style={styles.buttonAdd}>\r\n          {disp == \"contacts\" ? (\r\n            <MaterialButtonShare\r\n              iconName=\"share-variant\"\r\n              icon=\"account-multiple-plus\"\r\n              style={styles.materialButtonShare}\r\n            ></MaterialButtonShare>\r\n          ) : (\r\n            <View></View>\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[styles.footer, styles.materialIconTextButtonsFooter1]}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setDisp(\"disc\");\r\n          }}\r\n          style={styles.buttonWrapper1}\r\n        >\r\n          <MaterialCommunityIconsIcon\r\n            name={\"wechat\"}\r\n            style={styles.icon1}\r\n          ></MaterialCommunityIconsIcon>\r\n          <Text style={styles.btn1Text}>Recent</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setDisp(\"groups\");\r\n          }}\r\n          style={styles.activeButtonWrapper}\r\n        >\r\n          <MaterialCommunityIconsIcon\r\n            name={\"account-group\"}\r\n            style={styles.activeIcon}\r\n          ></MaterialCommunityIconsIcon>\r\n          <Text style={styles.activeContent}>Groups</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setDisp(\"contacts\");\r\n          }}\r\n          style={styles.buttonWrapper2}\r\n        >\r\n          <MaterialCommunityIconsIcon\r\n            name={\"contacts\"}\r\n            style={styles.icon2}\r\n          ></MaterialCommunityIconsIcon>\r\n          <Text style={styles.btn2Text}>Contacts</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: Constants.statusBarHeight,\r\n  },\r\n  scrollView: {\r\n    flex: 0.8,\r\n  },\r\n  footer: {\r\n    position: \"fixed\",\r\n    flex: 0.1,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: -10,\r\n    backgroundColor: \"#FFF\",\r\n    flexDirection: \"row\",\r\n    shadowColor: \"#111\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: -2,\r\n    },\r\n\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.2,\r\n  },\r\n  materialIconTextButtonsFooter1: {\r\n    height: 62,\r\n    width: \"100%\",\r\n    marginTop: 678,\r\n  },\r\n  buttonWrapper1: {\r\n    flex: 1,\r\n    paddingTop: 8,\r\n    paddingBottom: 10,\r\n    paddingHorizontal: 12,\r\n    minWidth: 80,\r\n    maxWidth: 168,\r\n    alignItems: \"center\",\r\n  },\r\n  icon1: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#616161\",\r\n    fontSize: 24,\r\n\r\n    opacity: 0.8,\r\n  },\r\n  btn1Text: {\r\n    fontSize: 12,\r\n    color: \"#9E9E9E\",\r\n    backgroundColor: \"transparent\",\r\n    paddingTop: 4,\r\n  },\r\n  activeButtonWrapper: {\r\n    flex: 1,\r\n    paddingTop: 6,\r\n    paddingBottom: 10,\r\n    paddingHorizontal: 12,\r\n    minWidth: 80,\r\n    maxWidth: 168,\r\n    alignItems: \"center\",\r\n  },\r\n  activeIcon: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#9E9E9E\",\r\n    fontSize: 24,\r\n    opacity: 0.8,\r\n  },\r\n  activeContent: {\r\n    fontSize: 14,\r\n    color: \"#9E9E9E\",\r\n    backgroundColor: \"transparent\",\r\n    paddingTop: 4,\r\n  },\r\n  buttonWrapper2: {\r\n    flex: 1,\r\n    paddingTop: 8,\r\n    paddingBottom: 10,\r\n    paddingHorizontal: 12,\r\n    minWidth: 80,\r\n    maxWidth: 168,\r\n    alignItems: \"center\",\r\n  },\r\n  icon2: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"#616161\",\r\n    fontSize: 24,\r\n    opacity: 0.8,\r\n  },\r\n  btn2Text: {\r\n    fontSize: 12,\r\n    color: \"#9E9E9E\",\r\n    backgroundColor: \"transparent\",\r\n    paddingTop: 4,\r\n  },\r\n  buttonAdd: {\r\n    width: 56,\r\n    height: 56,\r\n    position: \"fixed\",\r\n    flex: 0.1,\r\n    left: \"80%\",\r\n    right: 0,\r\n    bottom: 80,\r\n  },\r\n  materialButtonShare: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n});\r\nexport default Discussion_Repo;\r\n"]},"metadata":{},"sourceType":"module"}